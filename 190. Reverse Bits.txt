// leetcode 190. Reverse Bits
/*
Reverse bits of a given 32 bits unsigned integer.
For example, given input 43261596 (represented in binary as 00000010100101000001111010011100),
                 return 964176192 (represented in binary as 00111001011110000010100101000000).
不要想着先将整型转化成二进制数，翻转，在转化成整数这条不归路
主要思路是将二进制穿从右开始一个一个取出来，加到000...000中
不要整数转化二进制数，&运算就可以做到，n&1就是整数n的二进制数最右边1位，
接下来就是利用<<左移方法
*/
#include <iostream>
using namespace std;

int reverseBits(int n)
{
	if (n == 0) return 0;
	int res = 0;
	for (int i = 0; i<32; i++){
		if ((n & 1) == 1){//右边位为1  
			res = (res << 1) + 1;
		}
		else{//右边位为0  
			res = res << 1;
		}
		n = n >> 1;//取出最右边的位后，n整体右移1位  
	}
	return res;
}

int main(int argc, char* argv[])
{
	cout << reverseBits(43261596) << endl;
	return 0;
}