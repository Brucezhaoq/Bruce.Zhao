//128. Longest Consecutive Sequence
/*Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
Your algorithm should run in O(n) complexity.
*/
class S128_1 { //  O(n)  O(n)  100万数据 5.8s
public:
	int longestConsecutive(const vector<int> &nums) {
		unordered_map<int, bool> used;     //记录元素是否使用
		for (auto i : nums) used[i] = false;
		int longest = 0;
		for (auto i : nums) {
			if (used[i]) continue;
			int length = 1;
			used[i] = true;
			for (int j = i + 1; used.find(j) != used.end(); ++j) {
				used[j] = true;
				++length;
			}
			for (int j = i - 1; used.find(j) != used.end(); --j) {
				used[j] = true;
				++length;
			}
			longest = max(longest, length);
		}
		return longest;
	}
};
/*
use a hash map to store boundary information of consecutive sequence for each element; there 4 cases when a new element i reached:
neither i+1 nor i-1 has been seen: m[i]=1;
both i+1 and i-1 have been seen: extend m[i+m[i+1]] and m[i-m[i-1]] to each other;
only i+1 has been seen: extend m[i+m[i+1]] and m[i] to each other;
only i-1 has been seen: extend m[i-m[i-1]] and m[i] to each other.
*/
class S128_2 { //  O(n)  O(n)  100万数据 7.5s
public:
	int longestConsecutive(vector<int> &num) {
		unordered_map<int, int> m;
		int r = 0;
		for (int i : num) {
			if (m[i]) continue;
			r = max(r, m[i] = m[i + m[i + 1]] = m[i - m[i - 1]] = m[i + 1] + m[i - 1] + 1);
		}
		return r;
	}
};
class S128_3 { //  O(n)  O(n)  100万数据  5.2s
public:
	int longestConsecutive(vector<int>& nums) {
		unordered_map<int, bool> umap;
		for (auto x : nums)umap[x] = true;
		int b = 0, i ;
		for (auto x : nums)
		{
			if (umap.find(x - 1) != umap.end())
				continue; //guard for previous  如果有比x小, 始终保持x最小
			i = 1;
			while (umap.find(x + i) != umap.end())
				++i;
			b = max(b, i); //dp
		}
		return b;
	}
};

//128. Longest Consecutive Sequence
	int N128 = 10;
	vector<int> nums128(N128, 0);// { 100, 2, 1, 101  };// 
	for (int i = 0; i < N128; i++)
		nums128[i] = i+1;
	S128_1 s128;
	timestart();
	cout << "128.Longest Consecutive Sequence: " << s128.longestConsecutive(nums128) << endl;
	timeend();
	cout << "128.Longest Consecutive Sequence:  " << cost << "s" << endl;