//88. Merge Sorted Array
/*Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
Note:You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
The number of elements initialized in nums1 and nums2 are m and n respectively.
和merge sorted list类似，题目要求把B直接并入A中，A足够大。
一个方法可以从尾部开始排，不然插入一个元素就是O(n)。不用担心A里面原来的值被覆盖。
*/ 
class S88_1 {
public:
	void merge(int A[], int m, int B[], int n) {
		int count = m + n - 1;
		--m; --n;
		while (m >= 0 && n >= 0) A[count--] = A[m] > B[n] ? A[m--] : B[n--];
		while (n >= 0) A[count--] = B[n--];
	}
};

//88. Merge Sorted Array
	const int M = 10, N = 2;
	int A[M] = { 1 }; int B[N] = { 0, 2 };
	S88_1 s88;
	s88.merge(A, 1, B, 2);
	cout << "88. Merge Sorted Array: ";
	for (int i = 0; i < 3;i++)
	cout << A[i]   << ' ';
	cout << endl;