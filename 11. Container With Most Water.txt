//11. Container With Most Water
/*Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai).
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, 
which together with x-axis forms a container, such that the container contains the most water.
ai = {10,4,5,8,7,3,2}
i      0 1 2 3 4 5 6
X      0 1 2 3 4 5 6
*/
class S11
{
public:
	int maxArea(vector<int> &height)
	{
		int l = 0, r = height.size() - 1, res = 0;
		while (l < r)
		{
			res = max(res, (r - l) * min(height[l], height[r]));
			height[l] < height[r] ? ++l : --r;
		}
		return res;
	}
};
//11. Container With Most Water
	vector<int> height11{10,9,100,1};
	S11 s11;
	cout << "11. Container With Most Water: " << s11.maxArea(height11) << endl;
