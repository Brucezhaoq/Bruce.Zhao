//129.Sum Root to Leaf Numbers 求根到叶节点数字之和
/*Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.
An example is the root-to-leaf path 1->2->3 which represents the number 123.
Find the total sum of all root-to-leaf numbers.
For example,
    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.
Return the sum = 12 + 13 = 25.
这道求根到叶节点数字之和的题跟之前的求Path Sum 二叉树的路径和很类似，都是利用DFS递归来解，这道题由于不是单纯的把各个节点的数字相加，而是每到一个新的数字，
要把原来的数字扩大10倍之后再相加。代码如下：*/
class S129 {
public:
	int sumNumbers(TreeNode *root) {
		return sumNumbersDFS(root, 0);
	}
private:
	int sumNumbersDFS(TreeNode *root, int sum) {
		if (!root) return 0;
		sum = sum * 10 + root->val;
		if (!root->left && !root->right) return sum;
		return sumNumbersDFS(root->left, sum) + sumNumbersDFS(root->right, sum);
	}
};