//500.Keyboard Row 键盘行
/*Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard 
like the image below.
Example 1:
Input: ["Hello", "Alaska", "Dad", "Peace"]
Output: ["Alaska", "Dad"]
Note:You may use one character in the keyboard more than once.You may assume the input string will only contain letters of alphabet.
这道题给了我们一些单词，问哪些单词可以由键盘上的一行中的键符打出来，难度其实并不大。首先我们把键盘的三行字符分别保存到三个set中，然后遍历每个单词中的每个字符，
分别看当前字符是否在三个集合中，如果在，对应的标识变量变为1，我们统计三个标识变量之和就知道有几个集合参与其中了，参见代码如下：*/
class S500 {
public:
	vector<string> findWords(vector<string>& words) {
		vector<string> res;
		unordered_set<char> row1{ 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p' };
		unordered_set<char> row2{ 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l' };
		unordered_set<char> row3{ 'z', 'x', 'c', 'v', 'b', 'n', 'm' };
		for (string word : words) {
			int one = 0, two = 0, three = 0;
			for (char c : word) {
				if (c < 'a') c += 32;
				if (row1.count(c)) one = 1;
				if (row2.count(c)) two = 1;
				if (row3.count(c)) three = 1;
				if (one + two + three > 1) break;
			}
			if (one + two + three == 1) res.push_back(word);
		}
		return res;
	}
};

int main(int argc, char * argv[]){
	//500.Keyboard Row
	vector<string> in500{ "Hello", "Alaska", "Dad", "Peace" };
	S500 s500;
	vector<string> re500 = s500.findWords(in500);
	cout << "500.Keyboard Row: " <<  endl;